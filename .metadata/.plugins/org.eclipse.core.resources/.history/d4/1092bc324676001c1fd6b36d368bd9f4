package db.query;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import lombok.Data;

public class QueryParser {

	public Matcher queryType(String query) {

		Pattern typePattern = Pattern.compile("(select|insert)+\\s+.*?", Pattern.CASE_INSENSITIVE);
		Matcher typeMatcher = typePattern.matcher(query);

		if (!typeMatcher.matches()) {
			System.out.println("not good type request");
			return null;
		}
		
		String type = typeMatcher.group(1).toLowerCase().toString();

		switch (type) {

		case "select": {
			System.out.println("select");

			Pattern selectPattern = Pattern.compile("(select)\\s+(.*?)\\s+from\\s+(.*?)(?:\\s+where\\s+(.*?))?",
					Pattern.CASE_INSENSITIVE);
			Matcher selectMatcher = selectPattern.matcher(query);

			return selectMatcher;
		}
		case "insert": {
			System.out.println("insert");

			Pattern insertPattern = Pattern.compile("(insert)\\s+into\\s+(.*?)\\s+values\\s+(.*?)",
					Pattern.CASE_INSENSITIVE);
			Matcher insertMatcher = insertPattern.matcher(query);

			return insertMatcher;
		}
		default: {

			System.out.println("other type");
		}
		}

		return null;
	}

}

//SELECT *
//SELECT champ
//SELECT champ1,champ2

// \\s*(.*?)((?:\\s|,+(.*?))?

//char[] delimiters = new [] {','};

//INSERT INTO table (col1,col2,...)
//INSERT INTO table (col1)
//INSERT INTO table (col1,col2) VALUES ("val1","val2")
//INSERT INTO

//		String query2 = "col1  ,  col2";
//String[] res = query2.split("\\s*,\\s*");
//System.out.println(res[0] +":" +res[1]+":");

//
