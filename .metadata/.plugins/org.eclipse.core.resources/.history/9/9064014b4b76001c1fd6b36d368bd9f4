package db.query;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import lombok.Data;

@Data
public class QueryParser {

	public String queryType(String query) {

		Pattern typePattern = Pattern.compile("(select|insert)+\\s+.*?", Pattern.CASE_INSENSITIVE);
		Matcher typeMatcher = typePattern.matcher(query);

		if (!typeMatcher.matches()) {
			System.out.println("not good type request");
			return null;
		}

		String type = typeMatcher.group(1).toLowerCase().toString();

		switch (type) {

		case "select": {
			System.out.println("select");

			return "select";
		}
		case "insert": {
			System.out.println("insert");

			return "insert";
		}
		default: {

			System.out.println("other type");
		}
		}

		return null;
	}

	public SelectQuery selectParser(String query) {

		Pattern selectPattern = Pattern.compile("select\\s*+(.*?)\\s*+from\\s*+(.*?)(?:\\s*+where\\s*+(.*?))?",
				Pattern.CASE_INSENSITIVE);
		Matcher selectMatcher = selectPattern.matcher(query);

		if (!selectMatcher.matches()) {
			System.out.println("bad select request");
			return null;
		}

		if (selectMatcher.group(1).isEmpty()) {
			System.out.println("no field");
			return null;
		}
		
		String[] fields = selectMatcher.group(1).toString().split("\\s*,\\s*");

		if (selectMatcher.group(2).isEmpty()) {
			System.out.println("no table");
			return null;
		}

		String table = selectMatcher.group(2).toString();

		String condition = selectMatcher.group(3).toString();

		SelectQuery mySelect = new SelectQuery();
		for (int i = 0; i < fields.length; i++) {
			mySelect.addField(fields[i]);
		}
		mySelect.setTableName(table);
		mySelect.setConditions(condition);

		return mySelect;

	}
	
	public InsertQuery insertParser(String query) {
		
		
		
		Pattern insertPattern = Pattern.compile("insert\\s*+into\\s*+(.*?)\\s*+values\\s*+(.*?)",
				Pattern.CASE_INSENSITIVE);
		Matcher insertMatcher = insertPattern.matcher(query);
		
		if (!insertMatcher.matches()) {
			System.out.println("bad insert request");
			return null;
		}

		if (insertMatcher.group(1).isEmpty()) {
			System.out.println("no table");
			return null;
		}
		
		String table = insertMatcher.group(1).toString();
		
		if (insertMatcher.group(2).isEmpty()) {
			System.out.println("no value to add");
			return null;
		}
		
		
		InsertQuery myInsert = new InsertQuery();
		
		
		return myInsert;
	}

}
//		String query2 = "col1  ,  col2";
//String[] res = query2.split("\\s*,\\s*");
//System.out.println(res[0] +":" +res[1]+":");

//
